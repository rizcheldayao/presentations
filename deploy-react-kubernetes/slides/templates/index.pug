//- Use the presentation layout so we can keep this clean
extends layouts/presentation

//- Customize the title, meta description, and author using this block.
block append config
  -
    config.title = 'How to Deploy Your React Application While Saving Time and Energy';
    config.description = 'Deploy a React application on Kubernetes';
  -

//- Add your slides here. See templates/includes/_mixins.pug for information
//- on how `+slide` works.

block theme
  link(rel="stylesheet" href="css/theme/white.css" id="theme")

block slides
  +slide
    <section data-background-image="./img/basel.png">
    <div style="display: flex; justify-content: flex-start; flex-direction: column;">
    <div><h3 style="margin: 0px; display: flex; font-size: 1.3em"><span style="opacity: 0.5; padding-right: 10px; font-size: 1em">Why</span> Kubernetes: </h3></di>
    <div><h3 style="margin: 0px; display: flex; opacity: 0.5; font-size: 1.3em">Finding the</h3>
    <div><h3 style="margin: 0px; display: flex; font-size: 1.3em">best <span style="opacity: 0.5; padding-left: 10px; font-size: 1em">solution</span></h3></div>
    <div><h3 style="margin: 0px; display: flex;  font-size: 1.3em"> <span style="opacity: 0.5; padding-right: 10px;">for</span> you</h3></div>
    p(style="display: flex; font-size: 24px; font-weight: 200") Rizchel Dayao
    p(style="display: flex; font-size: 24px; font-weight: 200") @rizcheldayao || rdayao@us.ibm.com
    p(style="display: flex; font-size: 24px; font-weight: 200") Slides: https://goo.gl/uSuxXW || GitHub:https://github.com/IBM/deploy-react-kubernetes
    </div>
    </section>

  +slide
    <section data-background-image="./img/rizchel.png">
    <div style="text-align: left">
    h3 Nice to meet you üëãüèº
    li Previously Front End Developer
    li Developer Advocate @IBM
    li James Bond
    </div>
    </section>

    <aside class="notes">
      p Talk about school, background
    </aside>

  +slide
   <section data-background-image="./img/question-mark.png">
   h4(style="text-transform: uppercase; background:  #cb71d7") As a developer, I was always lost in the process of deploying an app in production
   </section>

  +slide
    <img style="border:none;" src="./img/confused.jpg" alt="Confused meme" height="500">
    h4(style="color: black") All of the documentation was different
    <aside class="notes">
    p Especially if you didn't want a yaml file
    </aside>

  +slide
    <img style="border:none;" src="./img/deployment-meme.jpg" alt="Deployment meme" height="500">
    h4(style="color: black") It took me almost a week to finally get a simple app deployed
  +slide
    <section data-background-image="./img/code.jpg" >
    <h4 style="background:#000; color: #fff">So I created a code pattern to quickly and easily deploy apps</h4>
    </section>

  +slide
    <iframe src="https://giphy.com/embed/nXxOjZrbnbRxS" width="356" height="480" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
    h4(style="color: black") To help others save hours of time and energy üíØ
    <aside class="notes">
    p And money, time = money!!
    </aside>

  +slide
   h3(style="color: #cb71d7") Code pattern
   <div style="display: flex; ">
   <div style="color: black; border: 2px solid #cb71d7">
   h4(style="color: #fff; background: #cb71d7; border: 2px solid #cb71d7; ") Code
   <div style="color:#cb71d7; padding: 5px">
   p.fragment React foundation
   p.fragment Redux state management
   p.fragment API integration
   </div>
   </div>
   <div style="color: black; border: 2px solid #cb71d7; margin-left: 100px">
   h4(style="color: #fff; background: #cb71d7; border: 2px solid #cb71d7;") Ops
   <div style="color:#cb71d7; padding: 5px">
   p.fragment Docker support
   p.fragment Kubernetes deployment
   p.fragment IBM Cloud
   </div>
   </div>
   </div>

  +slide
    <div style="text-align: left">
    <img style="border:none;" src="https://camo.githubusercontent.com/69187f55f40866c69d68be745a74abe9f707f3f0/68747470733a2f2f6d656469612e6769746875622e69626d2e636f6d2f757365722f313635302f66696c65732f62306339383864632d333161612d313165382d383637622d393535386435363130636437" alt="Code pattern flow" height="500"/>

  +slide
    <div style="position: relative; text-align: center;" >
    <img style="border:none; opacity: 0.2" src="./img/react.png" alt="React logo" height="500">
    <div style="text-align: left;color: #000; position: absolute; top: 25%">
    h4(style="color: #000") React is a JavaScript library for building user interfaces
    li.fragment Functions as the view layer
    li.fragment Component based
    li.fragment Virtual DOM
    li.fragment Declarative
    li.fragment JSX
    </div>
    <div>

  +slide
    <section data-background-image="./img/blueprint.jpg">
    h3(style="color: black; background:rgba(255,255,255,0.75)") Imagine we're building a house like an application
    </section>

  +slide
    <section data-background-image="./img/pyramid.png" data-background-size="contain">
    </section>

  +slide
    <section data-background-image="./img/kitchen.png">
    </section>

  +slide
    h3(style="color: #cb71d7") React containers
    <div style="display: flex; ">
    <div style="color: black; border: 2px solid #cb71d7">
    h4(style="color: #fff; background: #cb71d7; border: 2px solid #cb71d7; ") Stove
    <div style="color:#cb71d7; padding: 5px">
    <p class="fragment" data-fragment-index="1"> Made up by smaller parts
    <p class="fragment" data-fragment-index="2"> Manages everything within its ecosystem
    <p class="fragment" data-fragment-index="3"> Passes the state to smaller parts
    </div>
    </div>
    <div style="color: black; border: 2px solid #cb71d7; margin-left: 100px">
    h4(style="color: #fff; background: #cb71d7; border: 2px solid #cb71d7;") Containers
    <div style="color:#cb71d7; padding: 5px">
    <p class="fragment" data-fragment-index="1"> Made up of smaller elements called components
    <p class="fragment" data-fragment-index="2"> Manages all of the data
    <p class="fragment" data-fragment-index="3"> Passes data as props to components
    </div>
    </div>
    </div>

  +slide
    h3(style="color: #cb71d7") React components
    <div style="display: flex; ">
    <div style="color: black; border: 2px solid #cb71d7">
    h4(style="color: #fff; background: #cb71d7; border: 2px solid #cb71d7; ") Stove burner
    <div style="color:#cb71d7; padding: 5px">
    <p class="fragment" data-fragment-index="1"> Reusable piece
    <p class="fragment" data-fragment-index="2"> Receive data and state from stove
    </div>
    </div>
    <div style="color: black; border: 2px solid #cb71d7; margin-left: 100px">
    h4(style="color: #fff; background: #cb71d7; border: 2px solid #cb71d7;") Components
    <div style="color:#cb71d7; padding: 5px">
    <p class="fragment" data-fragment-index="1"> Reusable in multiple parts of an application
    <p class="fragment" data-fragment-index="2"> Receives data and state from container
    <p class="fragment" data-fragment-index="3"> Accept data from containers through props
    </div>
    </div>
    </div>

  +slide
    <section data-background-image="./img/developer.jpg">
    <h4 style="background:#000; color: #fff">A separation of concerns allows an application to be easier to manage and provides cleaner code
    </section>

  +slide
    <div style="position: relative; text-align: center;" >
    <img style="border:none; opacity: 0.2" src="./img/redux.png" alt="Redux flow" height="500">
    <div style="text-align: left;color: #000; position: absolute; top: 25%">
    h4(style="color: #000") Redux is a JavaScript library for managing application state:
    li.fragment Actions describe something has happened
    li.fragment Reducers update the state
    li.fragment Store holds the application state
    </div>
    <div>

  +slide
    <img style="border:none;" src="./img/redux-flow.png" alt="Redux flow" height="500">
    p(style="font-size: 20px; color: #000") https://stackoverflow.com/questions/45416237/axios-calls-in-actions-redux/45425055

  +slide
    <section data-background-image="./img/background.png">
    <div style="text-align: left; display: flex; ">
    <div style="color: #fff;">
    h3(style="text-align: left") Kitchen:
    <p class="fragment" data-fragment-index="1"> 1. A user would turn on the stove burner
    <p class="fragment" data-fragment-index="2"> 2. TURN_ON_STOVE action
    <p class="fragment" data-fragment-index="3"> 3. State of the stove is ON
    </div>
    <div style="color: #cb71d7; padding-left: 150px">
    h3(style="text-align: left; color: #cb71d7") Redux:
    <p class="fragment" data-fragment-index="1">  => trigger action
    <p class="fragment" data-fragment-index="2"> => sent to the reducer
    <p class="fragment" data-fragment-index="3"> => state of the store is ON
    </div>
    </div>
    </section>

  +slide
    <section data-background-image="./img/app-react.png" data-background-size="contain">
    </section>

  +slide
    <section data-background-image="./img/app-redux.png" data-background-size="contain">
    </section>

  +slide
    <section data-background-image="./img/rocket.png">
     h4(style="background:rgba(255,255,255,0.75); color: #000") Now let's containerize & deploy our application...<span class="fragment" data-fragment-index="1">without a YAML file (YAY! üéâ)
    </section>

  +slide
    <div style="position: relative; text-align: center">
    <img style="border:none;opacity:0.2" src="./img/docker.jpg" alt="Docker logo" height="500">
    <div style="text-align: left; color: #000; position: absolute; top: 25%">
    h4(style="color: #000") Docker is a tool used to containerize applications:
    li.fragment Build images
    li.fragment Run images on containers
    li.fragment Containers consists of an executable package of an application
    </div>
    </div>

  +slide
    <div style="position: relative; text-align: center">
    <img style="border:none;opacity:0.2" src="./img/kubernetes.png" alt="Kubernetes logo" height="500">
    <div style="text-align: left; color: #000; position: absolute; top: 25%">
    h4(style="color: #000") Kubernetes is an orchestration tool:
    li.fragment Automates deployment
    li.fragment Manages the deployment & containerized applications
    </div>
    </div>

  +slide
    <section data-background-image="./img/house.jpg">
    h3(style="color: #fff; background:#000") Kubernetes is like the home builder in charge of scheduling and managing a house
    </section>

    <aside class="notes">
      p Kubernetes schedules pods go to which nodes, manage deployment
    </aside>

  +slide
    <section data-background-image="./img/background.png">
    <div style="text-align: left; display: flex; ">
    <div style="color: #fff;">
    h3(style="text-align: left") Kubernetes definitions:
    <li class="fragment" data-fragment-index="1"> Cluster: Consist of a cluster master and multiple worker machines
    <li class="fragment" data-fragment-index="3"> Node: Worker machine that run applications managed by the cluster master
    <li class="fragment" data-fragment-index="5"> Pod: Usually contains one container
    </div>
    <div style="color: #cb71d7; padding-left: 150px">
    h3(style="text-align: left; color: #cb71d7") House equivalents:
    <p class="fragment" data-fragment-index="2"> = Home builder company
    <p class="fragment" data-fragment-index="4" style="margin-top: 50px"> = Home builder employees
    <p class="fragment" data-fragment-index="6" style="margin-top: 100px"> = Room or house
    </div>
    </div>
    </section>

  +slide
    <section data-background-image="./img/rubik.jpg">
    <div style="text-align: left;color: #000; background:rgba(255,255,255,0.9); padding: 10px">
    h3(style="color: #000") What challenges does Kubernetes solve?
    p.fragment 1. What happens if my app crashes?
    p.fragment 2. How can I roll out updates or rollbacks?
    p.fragment 3. What happens when I get an unexpected high influx of traffic?
    p.fragment 4. What will work best for my microservice architecture?
    </div>
    </section>

  +slide
    <div style="border: 5px solid #fff">
    h3(style="padding: 10px") Challenge #1: What happens if my app crashes?
    p.fragment(style="padding: 10px") Provides monitoring for pod health and restarts them in case of failure

  +slide
    <div style="border: 5px solid #fff">
    h3(style="padding: 10px") Challenge #2: How can I roll out updates or rollbacks?
    p.fragment(style="padding: 10px")  A user can roll out or rollback an update with zero downtime by incrementally updating Pods instances with new ones

  +slide
    <div style="border: 5px solid #fff">
    h3(style="padding: 10px") Challenge #3: What happens when I get an unexpected high influx of traffic?
    p.fragment(style="padding: 10px") Automatically scales the number of pods in deployment

  +slide
    <div style="border: 5px solid #fff">
    h3(style="padding: 10px") Challenge #4: What will work best for my microservice architecture?
    p.fragment(style="padding: 10px") Microservices can be packaged into containers which are each deployed as pods for isolation and resource sharing

  +slide
    <section data-background-image="./img/hole.jpg">
    <div style="text-align: left;background:rgba(255,255,255,0.75);  color: #000; padding: 10px">
    h3(style="color: #000") Drawbacks & common pitfalls:
    li.fragment Steep learning curve
    li.fragment Set up
    li.fragment Misusing containers
    li.fragment Moving from beginner to advanced
    </section>

  +slide
    <section data-background-image="./img/demo.jpg">
     h2(style="background:rgba(255,255,255,0.75); color: #000") Demo(ish)
    </section>

  +slide
    <div style="position: relative; text-align: center">
    <img style="border:none;opacity: 0.2" src="./img/ibm.svg" alt="IBM logo" height="500">
    <div style="text-align: left; color: #000; position: absolute; top: 25%">
    h4(style="color: #000") Deployment prerequisites:
    li.fragment IBM Cloud account & Docker account
    li.fragment Install IBM Cloud CLI
    li.fragment Install the IBM Cloud Container Registry plugin
    li.fragment Install the IBM Cloud Container Service plugin
    li.fragment Install Kubernetes command-line tool, kubectl
    </div>
    </section>

  +slide
    <div style="display: flex;">
    h4(style="font-size: 10em; position: relative; opacity: 0.5") 01
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Create <span style="color: navy">Dockerfile</span></h2>
    </div>

  +slide
    <section data-background-image="./img/Dockerfile.png" data-background-size="contain" data-background-position="left">
    </section>

  +slide
    <section data-background-image="./img/python.png" data-background-size="contain" data-background-position="left">
    </section>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative; opacity: 0.5">02</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"> <span style="color: navy">Build</span> Docker image</h2>
    </div>

  +slide
    <div style="text-align: left; color: #fff; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace;" >
    p # Build in the directory the Dockerfile exists
    p $ export docker_username=<span style="color: #FF69B4">[DOCKER_USERNAME]<span>
    p $ docker build  -t $docker_username/app-image .
    <p class="fragment" data-fragment-index="1"> Sending build context to Docker daemon  856.6kB
    <p class="fragment" data-fragment-index="1">Step 1/8 : FROM node:9.4
    <p class="fragment" data-fragment-index="2">...
    <p class="fragment" data-fragment-index="3">Successfully tagged <span style="color: #FF69B4">[DOCKER_USERNAME]</span>/app-image:latest

    <aside class="notes">
      p . is path is .
    </aside>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative; opacity: 0.5">02</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"><span style="color: navy">Run</span> image</h2>
    </div>

  +slide
    <div style="text-align: left; color: #fff; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace; " >
    p $ docker run -p 3000:3000 -d $docker_username/app-image
    p.fragment 1540b75702a387a2e1fed754a89f

    <aside class="notes">
      p -p: Publish a container‚Äôs port(s) to the host
      p -d: Run container in background and print container ID
      p run: Run a command in a new container
    </aside>

  +slide
    <div style="display: flex;">
    h4(style="font-size: 10em; position: relative; opacity: 0.5") 02
    <h3 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Create <span style="color: navy">Kubernetes</span> cluster</h3>
    </div>

  +slide
    <section data-background-image="./img/kubernetes-search.png" data-background-size="contain">
    </section>

  +slide
    <section data-background-image="./img/kubernetes-create.png" data-background-size="contain">
    </section>

  +slide
    <section data-background-image="./img/kubernetes-dashboard.png" data-background-size="contain">
    </section>

  +slide
    <div style="text-align: left; color: #fff; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace; " >
    p $ bx cs cluster-config <span style="color: #FF69B4">[CLUSTER_NAME]</span>
    p.fragment export KUBECONFIG= /Users/ibm/.bluemix/plugins/container-service/clusters/rizchel-cluster/kube-config-dal1-rizchel-cluster.yml

  +slide
    <div style="display: flex;">
    h4(style="font-size: 10em; position: relative; opacity: 0.5") 03
    <h3 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Create <span style="color: navy">namespace</span></h3>
    </div>

  +slide
    <div style="text-align: left; color: #fff; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace; " >
    p $ bx cr namespace-add <span style="color: #FF69B4">[NAMESPACE]</span>
    p.fragment Adding namespace '<span style="color: #00f9ff">rdayao</span>'...
    p.fragment Successfully added namespace '<span style="color: #00f9ff">rdayao</span>'
    p.fragment <span style="color: #39ff14">OK</span>

  +slide
    <div style="display: flex;">
    h4(style="font-size: 10em; position: relative; opacity: 0.5") 04
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"> <span style="color: navy">Build</span> image</h2>
    </div>

  +slide
    <div style="text-align: left; color: #fff; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace; " >
    p $ bx cr build -t registry.<span style="color: #FF69B4">[IBM_CLOUD_REGION]</span>.bluemix.net/<span style="color: #FF69B4">[NAMESPACE]</span>/app-image .
    <p class="fragment" data-fragment-index="1"> Sending build context to Docker daemon  861.7kB
    <p class="fragment" data-fragment-index="1">Step 1/8 : FROM node:9.4
    <p class="fragment" data-fragment-index="2">...
    <p class="fragment" data-fragment-index="3"><span style="color: #39ff14">OK</span>

  +slide
    <div style="display: flex;">
    h4(style="font-size: 10em; position: relative; opacity: 0.5") 05
    <h3 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Run the <span style="color: navy">image</span> as a <span style="color: navy">deployment</span></h3>
    </div>

  +slide
    <div style="text-align: left; color: #fff; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace; " >
    p $ kubectl run app-deployment --image=registry.<span style="color: #FF69B4">[IBM_CLOUD_REGION]</span>.bluemix.net/<span style="color: #FF69B4">[NAMESPACE]</span>/app-image
    p.fragment deployment "app-deployment" created

    <aside class="notes">
      p The Deployment instructs Kubernetes how to create and update instances of your application.
      p Cluster master schedules application instances onto individual Nodes in the cluster.
      p run: Run a particular image on the cluster.
    </aside>

  +slide
    <div style="display: flex;">
    h4(style="font-size: 10em; position: relative; opacity: 0.5") 06
    <h3 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"><span style="color: navy">Expose</span> deployment as a <span style="color: navy">service</span></h3>
    </div>

  +slide
    <div style="text-align: left; color: #fff; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace; " >
    p $ kubectl expose deployment/app-deployment --type=NodePort --name=app-service --port=3000
    p.fragment service "app-service" exposed

    <aside class="notes">
      p expose application outside of cluster
      p create service of deployment
    </aside>

  +slide
    <div style="display: flex;">
    h4(style="font-size: 10em; position: relative; opacity: 0.5") 07
    <h3 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"><span style="color: navy">Access</span> application</h3>
    </div>

  +slide
    <div style="color: #fff; text-align: left; font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace; " >
    p # Obtain public IP Address of cluster
    p $ bx cs workers <span style="color: #FF69B4">[CLUSTER_NAME]</span>
    <p class="fragment" data-fragment-index="1"> # Obtain the NodePort of the service
    <p class="fragment" data-fragment-index="1"> $ kubectl describe service app-service
    <p class="fragment" data-fragment-index="2"> # Access it at <span style="color: #00f9ff">http://[PUBLIC_IP_ADDRESS]:[NODEPORT]</span>

  +slide
    <section data-background-image="./img/stairs.jpg">
    <div style="text-align: left;background:rgba(255,255,255,0.75);  color: #000; padding: 10px">
    h4(style="color: #000") Next steps:
    li.fragment Continuous integration & deployments
    li.fragment Multiple containers
    li.fragment Istio
    </div>
    </section>

  +slide
    <div style="text-align: center">
      h3 Thank you!
      <div><img style="border-radius: 50%" src="https://user-images.githubusercontent.com/18426780/36912901-71fc797e-1e05-11e8-8e83-9dd223120f2b.jpg" alt="Speaker picture" height="200"></div>
      h3 Rizchel Dayao
      p Follow me on Twitter: @rizcheldayao
      p Slides available: https://goo.gl/uSuxXW
    </div>


  +slide
    <div style="text-align: left">
    h3 Resources
    p(style="font-size: 20px; margin: 0") 1. Slides
    p(style="font-size: 20px; color: navy") (https://goo.gl/uSuxXW)
    p(style="font-size: 20px;") 2. GitHub Repo
    p(style="font-size: 20px; color: navy") (https://github.com/IBM/deploy-react-kubernetes)
    p(style="font-size: 20px;") 3. React & Kubernetes
    p(style="font-size: 20px; color: navy") (https://reactjs.org/, https://kubernetes.io/)
    p(style="font-size: 20px;") 4. Blog post
    p(style="font-size: 20px; color: navy") (https://medium.com/@rizchel.a.dayao/my-journey-to-deploying-my-first-react-application-with-kubernetes-95e6d25f434d
    p(style="font-size: 20px;") 5. Demo
    p(style="font-size: 20px; color: navy") (https://youtu.be/1Lq9vW3LuH8)
    p(style="font-size: 20px;") 6. IBM Cloud
    p(style="font-size: 20px; color: navy") (https://console.bluemix.net)
