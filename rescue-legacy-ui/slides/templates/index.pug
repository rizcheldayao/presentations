//- Use the presentation layout so we can keep this clean
extends layouts/presentation

//- Customize the title, meta description, and author using this block.
block append config
  -
    config.title = 'Rescuing Legacy UIs: How IBM Is Putting Performance First';
    config.description = 'FILL OUT DESCRIPTION!!!';
  -

//- Add your slides here. See templates/includes/_mixins.pug for information
//- on how `+slide` works.

block theme
  link(rel="stylesheet" href="css/theme/custom.css" id="theme")

block slides
  +slide
    <div><h3 style="margin: 0px">Rescuing</h3></div>
    <div><h4 style="margin: 0px; display: inline">Legacy</h4> <h3 style="margin: 0px; display: inline">UIs:</h3> </div>
    <div> <h4 style="margin: 0px; display: inline">How <h3 style="margin: 0px; display: inline">IBM</h3> <h4 style="margin: 0px; display: inline">Is Putting</h4>
    <h3 style="margin: 0px">Performance First</h3></div>

    <p style="font-weight: 200; margin-top: 30px; font-size: 24px;"> Rizchel Dayao </p>

    <p style="display: inline; font-weight: 200; font-size: 24px;"> @rizcheldayao </p> <p style="display: inline; opacity: 0.5; font-weight: 200; font-size: 24px;">||</p> <p style="display: inline; font-weight: 200; font-size: 24px;">rdayao@us.ibm.com</p>

  +slide
    <div style="display:flex; flex-direction: column">
    h3 Nice to meet you üëãüèº
    <div style="display:flex; justify-content:space-between">
    <div style="padding-top: 5%; font-weight: 200;">
    li Developer Advocate @IBM
    li Front End Developer
    li With a sprinkle of DevOps
    li First time speaker
    </div>
    <div><img style="border-radius: 50%"src="../img/rizchel.jpg" alt="Speaker picture" height="200"></div>
    </div>
    </div>

  +slide
    <div style="text-align: center">
    <div><iframe src="https://giphy.com/embed/jUwpNzg9IcyrK" width="480" height="360" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div>
    <h4 style="text-align: center; display: inline; opacity: 1"> 40% of people <span style="display: inline; color: orange">abandon</span> a website that takes <span style="display: inline; color: orange">more than</span> 3 seconds to load.</h4>
    </div>

  +slide
    <h4 style="text-align: center; opacity: 1"> <span style="color: navy">Optimizing</span> website performance has become <span style="color: navy">key</span> to attracting and keeping users.</h4>

  +slide
    <div style="text-align: center">
    <iframe src="https://giphy.com/embed/jquDWJfPUMCiI" width="480" height="428" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
    <h4 style="text-align: center; opacity: 1"> The usage dashboard on the IBM Cloud could take <span style="color: orange">more than 30 seconds</span> to load!</h4>
    </div>

  +slide
    video(src="../video/first-load.mp4" controls)

  +slide
    h3 How usage dashboard was built:
    li.fragment Built in Dojo, jQuery, etc in one microservice
    li.fragment Blocked UI until all the data was loaded
    li.fragment Made API calls to a <i>mysterious</i> monolith layer

  +slide
    <div style="text-align: center">
    <h3 style="display: inline"> We needed to <h3 style="display: inline; color: #000080">improve performance</h3><h3>...but where do we start?
    </div>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">01</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"><span style="color: navy">Clean</span> up code</h2>
    </div>

  +slide
    h3 Clean up:
    ul
    li.fragment Took out unneccessary code (Dojo, jQuery, etc)
    li.fragment Changed all the code to use React & Redux
    li.fragment Isolated the React app from the rest of the microservice

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">02</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Introduce <span style="color: navy">Skeleton Components</span></h2>
    </div>

  +slide
    <h3 style="text-align: center"> What are skeleton components?

  +slide
    <img style="border: none;"src="../img/skeleton-components.png" alt="Skeleton components" height="500">
    <p style="text-align: center"> Element representations of the UI while content is being loaded.

  +slide
    h3 Benefits:
    ul
    li.fragment Did not block the UI
    li.fragment Load data as it becomes available
    li.fragment Render explorable UI before all data is available

  +slide
    <div style="text-align: center">
    <h3 style="text-align: center"> But the data still took <span style="color:orange">forever</span> to load...</h3>
    </div>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">03</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Implemented <span style="color: navy">GraphQL</span> Middle Tier</h2>
    </div>

  +slide
    <div style="text-align: center">
    <iframe src="https://giphy.com/embed/5p2wQFyu8GsFO" width="480" height="271" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
    <h3 style="text-align: center"> GraphQL was life changing üôåüèº</h3>
    </div>

  +slide
    <div style="text-align: center; display: flex; flex-direction: column; width: 15%; margin-left: 45%">
    <img style="border: none; margin: 0; box-shadow: none; background: transparent"src="../img/application.png" alt="Application">
    <div style="display: flex; justify-content: center; margin: 1rem 0;">
      <svg fill="#fff" height="48" viewBox="0 0 24 24" width="48" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 0h24v24H0V0z" fill="none"/>
        <path d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" fill="#fff"/>
      </svg>
      <svg fill="#fff" height="48" viewBox="0 0 24 24" width="48" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 0h24v24H0V0z" fill="none"/>
        <path d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"/>
      </svg>
    </div>
    <img style="border: none; margin: 0; box-shadow: none; background: transparent"src="../img/graphql.png" alt="Graphql">
    <div style="display: flex; justify-content: center; ">
      <svg fill="#fff" height="48" viewBox="0 0 24 24" width="48" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 0h24v24H0V0z" fill="none"/>
        <path d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" fill="#fff"/>
      </svg>
      <svg fill="#fff" height="48" viewBox="0 0 24 24" width="48" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 0h24v24H0V0z" fill="none"/>
        <path d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"/>
      </svg>
    </div>
    <img style="border: none; margin: 0; box-shadow: none; background: transparent"src="../img/data.png" alt="Data source">
    </div>

  +slide
    h3 GraphQL:
    ul
    li.fragment Middle tier reduced number of API requests
    li.fragment Apollo Client cache query results
    li.fragment Cached data available subsequent page loads & changing views
    li.fragment Support local, offline development support

  +slide
   video(src="../video/account-switch.mp4" controls)

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">04</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Use <span style="color: navy">static</span> assets</h2>
    </div>

  +slide
    h3 Static assets:
    ul
    li.fragment Doesn't need to be processed by Webpack
    li.fragment Assets are cached
    li.fragment No data management required by the server because the data and template are cached

    <aside class="notes">
      Static assets are html, vanilla js, etc files
    </aside>


  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">05</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"><span style="color: navy">Lazy load</span> non essentials</h2>
    </div>

  +slide
    h3 Lazy load:
    ul
    li.fragment Only load what‚Äôs needed
    li.fragment Speeds up initial load
    li.fragment Wait for an interaction to fire request

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">06</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Use <span style="color: navy">Service Workers</span></h2>
    </div>

  +slide
     <p style="text-align: center; opacity: 1; font-weight: 600">"Service workers enable applications to <span style="color: navy">control</span> network requests, <span style="color: navy">cache</span> those requests to improve performance, and provide <span style="color: navy">offline access</span> to cached content."</p>

  +slide
    h3 Service Workers:
    ul
    li.fragment Download on first access
    li.fragment Cache requests and serve instantly on repeat visits
    li.fragment Offline support

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">07</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Webpack <span style="color: navy">analyze</span></h2>
    </div>

  +slide
    <h3 style="text-align: center"> webpack-bundle-analyzer module</h3>

  +slide
    h3 What does the npm package do?
    ul
    li.fragment Find out what modules are inside your bundle
    li.fragment Identify modules that can be removed
    li.fragment Optimize it

  +slide
    <div style="text-align: center">
    <img style="border: none;"src="../img/webpack-analyze.png" alt="Webpack analyze" height="500">
    </div>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">08</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"><span style="color: navy">Measure</span> performance</h2>
    </div>

  +slide
    <h3 style="text-align: center">Performance.timing API</h3>

  +slide
    h3 We can calculate...
    ul
    li.fragment Time on render
    li.fragment Time to interact
    li.fragment Time to load a cold cache
    li.fragment Time to load for repeat views
    li.fragment Load time for switching views

  +slide
    <div style="text-align: center">
    <iframe src="https://giphy.com/embed/uTuLngvL9p0Xe" width="356" height="480" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
    <h4 style="opacity: 1"> We increased perceived performance by <span style="color: navy">over 250%</span></h3>
    p üéâüéâüéâ
    </div>

  +slide
    <div style="text-align: center">
    h3 But we still have a long way to go...
    </div>

  +slide
    h3 Roadmap:
    li.fragment Async load/pre-loading
    li.fragment Implement service workers
    li.fragment Spread this out to other microservices

  +slide
    <div style="text-align: center">
    <h4 style="opacity: 1"> New + existing customers = <span style="color: navy">increased</span> revenue</h4>
    </div>

  +slide
    h3 Recap:
    li.fragment Clean up code
    li.fragment Skeleton components
    li.fragment GraphQL
    li.fragment Static assets
    li.fragment Lazy load
    li.fragment Service workers
    li.fragment Webpack analyze
    li.fragment Measure performance

  +slide
    <div style="text-align: center">
      h3 Thank you!
      <div><img style="border-radius: 50%"src="../img/rizchel.jpg" alt="Speaker picture" height="200"></div>
      h3 Rizchel Dayao
      <div style="display: flex">
        <div style="display: flex; justify-content: center; margin-right: 1rem; margin-left: 6rem">
          <img style="border: none; margin: 0; box-shadow: none; background: #00baa1;%" src='../img/twitter.png' />
          <p>@rizcheldayao</p>
        </div>
        <div style="display: flex; justify-content: center;">
          <img style="border: none; margin: 0; box-shadow: none; background: transparent; padding: 1rem" src='../img/mail.png' />
          <p>rdayao@us.ibm.com</p>
        </div>
      </div>
    </div>

  +slide
    h3 Resources
    <p style="font-size: 20px; margin: 0"> 1. GraphQL</p>
    <p style="font-size: 20px; color: navy">(http://graphql.org/)</p>
    <p style="font-size: 20px;"> 2. Service Workers </p>
    <p style="font-size: 20px; color: navy">(https://developers.google.com/web/fundamentals/primers/service-workers/)</p>
    <p style="font-size: 20px;"> 3. Static assets
    <p style="font-size: 20px; color: navy">(https://vuejs-templates.github.io/webpack/static.html)</p>
    <p style="font-size: 20px;"> 4. Lazy Load
    <p style="font-size: 20px; color: navy">(https://webpack.js.org/guides/lazy-loading/)
    <p style="font-size: 20px;"> 5. Webpack analyze
    <p style="font-size: 20px; color: navy">(https://www.npmjs.com/package/webpack-bundle-analyzer)</p>
    <p style="font-size: 20px;"> 6. Performance API
    <p style="font-size: 20px; color: navy">(https://developer.mozilla.org/en-US/docs/Web/API/Performance/timing)</p>
    <p style="font-size: 20px;"> 7. Skeleton components
    <p style="font-size: 20px; color: navy">(https://codeburst.io/achieve-skeleton-loading-with-react-a12404678030)</p>
