//- Use the presentation layout so we can keep this clean
extends layouts/presentation

//- Customize the title, meta description, and author using this block.
block append config
  -
    config.title = 'Rescuing Legacy UIs: How IBM Is Putting Performance First';
    config.description = 'FILL OUT DESCRIPTION!!!';
  -

//- Add your slides here. See templates/includes/_mixins.pug for information
//- on how `+slide` works.

block theme
  link(rel="stylesheet" href="css/theme/custom.css" id="theme")

block slides
  +slide
    <div><h3 style="margin: 0px">Rescuing</h3></div>
    <div><h4 style="margin: 0px; display: inline">Legacy</h4> <h3 style="margin: 0px; display: inline">UIs:</h3> </div>
    <div> <h4 style="margin: 0px; display: inline">How <h3 style="margin: 0px; display: inline">IBM</h3> <h4 style="margin: 0px; display: inline">Is Putting</h4>
    <h3 style="margin: 0px">Performance First</h3></div>

    <p style="font-weight: 200; margin-top: 30px; font-size: 24px;"> Rizchel Dayao </p>

    <p style="display: inline; font-weight: 200; font-size: 24px;"> @rizcheldayao </p> <p style="display: inline; opacity: 0.5; font-weight: 200; font-size: 24px;">||</p> <p style="display: inline; font-weight: 200; font-size: 24px;">rdayao@us.ibm.com</p>

  +slide
    <div style="display:flex; flex-direction: column">
    h3 Nice to meet you üëãüèº
    <div style="display:flex; justify-content:space-between">
    <div style="padding-top: 5%; font-weight: 200;">
    li Developer Advocate @IBM
    li Front End Developer
    li Passion for all things tech related
    li Trying to learn all day, every day
    </div>
    <div><img style="border-radius: 50%"src="../img/rizchel.jpg" alt="Speaker picture" height="200"></div>
    </div>
    </div>

  +slide
    <div style="text-align: center">
    <div><iframe src="https://giphy.com/embed/jUwpNzg9IcyrK" width="480" height="360" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div>
    <h3 style="text-align: center; display: inline;"> 40% of people <span style="display: inline; color: orange">abandon</span> a website that takes <span style="display: inline; color: orange">more than</span> 3 seconds to load.</h3>
    </div>

  +slide
    <h4 style="text-align: center; opacity: 1"> <span style="color: navy">Optimizing</span> website performance has become <span style="color: navy">key</span> to attracting and keeping users.</h4>

  +slide
    <div style="text-align: center">
    <iframe src="https://giphy.com/embed/jquDWJfPUMCiI" width="480" height="428" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
    <h3 style="text-align: center"> The usage dashboard on the IBM Cloud could take <span style="color: orange">more than 30 seconds</span> to load!</h3>
    </div>

  +slide
    h3 How usage dashboard was built:
    li.fragment Built in Dojo, jQuery, etc in one microservice
    li.fragment Blocked UI until all the data was loaded
    li.fragment Made API calls to a <i>mysterious</i> monolith layer

  +slide
    <div style="text-align: center">
    <h3 style="display: inline"> We needed to <h3 style="display: inline; color: #000080">improve performance</h3><h3>...but where do we start?
    </div>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">01</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);"><span style="color: navy">Clean</span> up code</h2>
    </div>

  +slide
    h3 Clean up:
    ul
    li.fragment Took out unneccessary code (Dojo, jQuery, etc)
    li.fragment Changed all the code to use React & Redux
    li.fragment Isolated the React app from the rest of the microservice

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">02</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Introduce Skeleton Components</h2>
    </div>

  +slide
    <h3 style="text-align: center"> What are skeleton components?

  +slide
    <img style="border: none;"src="../img/skeleton-components.png" alt="Skeleton components" height="500">
    <p style="text-align: center"> Element representations of the UI while content is being loaded.

  +slide
    h3 Benefits:
    ul
    li.fragment Did not block the UI
    li.fragment Load data as it becomes available
    li.fragment Render explorable UI before all data is available

  +slide
    <div style="text-align: center">
    <h3 style="text-align: center"> But the data still took a long time to load...</h3>
    </div>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">03</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Implemented GraphQL Middle Tier</h2>
    </div>

  +slide
    <div style="text-align: center">
    <iframe src="https://giphy.com/embed/5p2wQFyu8GsFO" width="480" height="271" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
    <h3 style="text-align: center"> GraphQL was life changing üôåüèº</h3>
    </div>

  +slide
    h3 GraphQL:
    ul
    li.fragment Middle tier reduced number of of API requests
    li.fragment Apollo Client cache query results
    li.fragment Cached data available subsequent page loads
    li.fragment Pre cached data for changing views
    li.fragment Support local, offline development support

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">04</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Use static assetss</h2>
    </div>

  +slide
    h3 Static assets:
    ul
    li.fragment Doesn't need to be processed by Webpack
    li.fragment Assets are cached
    li.fragment No data management required by the server because the data and template are cached

    <aside class="notes">
      Static assets are html, vanilla js, etc files
    </aside>

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">05</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Lazy load non essentials</h2>
    </div>

  +slide
    h3 Lazy load:
    ul
    li.fragment Only load what‚Äôs needed
    li.fragment Speeds up initial load
    li.fragment Wait for an interaction to fire request

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">06</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Use Service Workers</h2>
    </div>

  +slide
     <h3 style="text-align: center">"Service workers enable applications to control network requests, cache those requests to improve performance, and provide offline access to cached content."</h3>

  +slide
    h3 Service Workers:
    ul
    li.fragment Download on first access
    li.fragment Cache requests and serve instantly on repeat visits
    li.fragment Offline support

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">07</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Webpack analyze</h2>
    </div>

  +slide
    h3 Webpack analyze:
    ul
    li.fragment Plugin used during development
    li.fragment Find out what modules are inside your bundle
    li.fragment Remove bundles that aren't being used
    li.fragment Hints on how to optimize Webpack build

  +slide
    picture of webpack analyze

  +slide
    <div style="display: flex;">
    <h4 style="font-size: 10em; position: relative">06</h4>
    <h2 style="position: absolute; top: 50%; left: 75%; transform: translate(-50%, -50%);">Measure performance</h2>
    </div>

  +slide
    h3 Performance marks:
    ul
    li.fragment Timing API available
    li.fragment Time on render
    li.fragment Time to interact
    li.fragment Time to load a cold cache
    li.fragment Time to load for repeat views
    li.fragment Load time for switching views
    li.fragment Fix where you can improve the time

  +slide
    picture of timing api output

